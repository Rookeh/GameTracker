@page "/"
@using GameTracker.Interfaces;

@inject IGameLibraryManager GameLibraryManager;

<PageTitle>Game Tracker</PageTitle>

@if (!_isAuthenticated)
{
    <span>Please log in to configure your game library.</span>
}
else if (_isInitializing)
{
    <PlaceholderContainer Animation="PlaceholderAnimation.Glow">
        <Placeholder Width="PlaceholderWidth.Col7" />
        <Placeholder Width="PlaceholderWidth.Col9" />
        <Placeholder Width="PlaceholderWidth.Col6" />
    </PlaceholderContainer>
}
else
{
    <h1>Welcome, @_userName</h1>
    <p>Your library contains @GameLibraryManager.GamesGroupedByTitle.Count() titles, from @GameLibraryManager.InitialisedProviders providers.</p>
    <p>Please select an option from the left menu.</p>
}


@code {

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private bool _isAuthenticated;
    private bool _isInitializing;
    private string? _userName;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        _isAuthenticated = authState?.User?.Identity?.IsAuthenticated ?? false;
        _userName = authState?.User?.Identity?.Name;

        if (_isAuthenticated)
        {
            _isInitializing = true;
            await GameLibraryManager.InitialiseProviders(_userName);
            _isInitializing = false;
        }
    }
}